<!DOCTYPE html>
<html lang="ru">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title data-i18n="PAGE_TITLE">Сравнивалка предметов Path Of Exile 2</title>
	<link rel="stylesheet" href="./css/style.css">
	<link rel="stylesheet" href="./css/loading-bar.css">
	<link rel="stylesheet" href="./css/temporary-color.css">
</head>
<body>
	<div class="layout">
		<!-- Левая колонка -->
		<div id="tab-nav">
			<div id="tab-nav-items">
				<div>
					<span data-i18n="ITEM_TITLE" title="ToDo: у всего текста надо сделать получение ресурсов, а содержимое оставить пустым наверное? Как подменишь - no-data-i18n убери. И кажется input завелись. И русские буквы искать в общем объёме - они должны только в ресурсах остаться"></span>
					<span data-i18n="ITEM_TITLE_MOCK"  id="item-name" class="cropped-text" title="ToDo: заполняется названием предмета при загрузке и смене предмета"></span>
				</div>								
				<div>
					<span data-i18n="ITEM_TYPE_TITLE"></span>
					<span  data-i18n="ITEM_TYPE_MOCK" id="item-type-text" class="cropped-text" title="ToDo: заполняется названием типа предмета при загрузке и смене предмета. Может здесь контекстное меню для смены сделать. Типо в меню будут варианты других типов. В случае отсутствии предметов - должно быть что? Многоточие"></span>
				</div>
			</div>
			<div id="tab-nav-heroes" title="ToDo: название, иконка героя и краткое описание">
				<div>
					<span id="hero-name" class="cropped-text" data-i18n="HERO_NAME_MOCK" title="ToDo: заполняется названием героя при загрузке и смене предмета. В случае отсутствии героев - должно быть что? Многоточие"></span>
					<span id="hero-description" data-i18n="HERO_DESCRIPTION_MOCK" title="ToDo: по контестному меню должно вызываться окно с правкой описания. А так - при загрузке и смене должно обновляться. В случае отсутствии героев - должно быть что? Надпись о необходимости добавить героя для описания. А в Tooltip класть уже полное описание"></span>
				</div>
			</div>			
			<div id="tab-nav-neurons" title="ToDo: краткая информация про нейроны - только информация про наличие необработанных вообще и в текущем типе.">
				<span id="text-all-parsed" data-i18n="NEURON_ALL_TEXT_PARSED" title="ToDo:при обработке/подсчёте нейронов надо учесть что text-all-parsed, text-have-no-parsed одновременно не видны"></span>
				<div id="text-have-no-parsed" title="ToDo:поработай над css, чтобы эта штука выглядела хорошо.">
					<span data-i18n="NEURON_NOT_PARSED"></span>
					<table>
						<tr id="neuron-not-parsed-type-tr" title="ToDo:эта строку отображать только в случае, если есть в текущем типе не обработанные">
							<th data-i18n="NEURON_NOT_PARSED_CURRENT_TYPE"></th>
							<td id="neuron-not-parsed-current-type-count"></td>
							<td id="neuron-not-parsed-current-type-example"></td>
						</tr>
						<tr id="neuron-not-parsed-all-tr" title="ToDo:эта строку отображать только в случае, если есть вне текущего типа не обработанные">
							<th data-i18n="NEURON_NOT_PARSED_ALL_TYPE"></th>
							<td id="neuron-not-parsed-all-type-count"></td>
							<td id="neuron-not-parsed-all-type-example"></td>
						</tr>
					</table>
				</div>
			</div>			
		</div>
		<div id="tab-content" title="ToDo: А это место слева, которое будет хранить всю уточняющую информацию и заполняться одним из тех трёх div'ов, что внизу.">
			<div id="tab-content-items" class="additional-info" title="ToDo: Здесь показывается то содержимое, которое нужно при работе, переключаясь между двумя сущностями. Сюда надо перенести из items. А наверху оставить название предмета, тип предмета и поле для ввода с кнопкой добавить." >
				ToDo: времянка для показа предметов подробно.
				
					<div title="ToDo: поле для ввода, маленькое. Определиться, можем ли мы использовать секции и main.">
						<textarea id="item-new-text" class="text-sized" title="ToDo: поле для ввода, маленькое. Возможно textarea"  placeholder="Вставьте текст предмета после CTRL+C..."></textarea>
						<button  data-i18n="ADD_ITEM_BUTTON" id="add-item-button" class="text-sized" title="ToDo:при нажатии на эту кнопку должна быть обработано то, что в поле выше. И добавить, и переключить. Важно - если предмет сменил тип, то перерисовывать надо почти всё, а если не поменял -только текущий предмет."></button>
					</div>
				

					<section title="ToDo: загрузка из файла">
						<input id="file-input" type="file" accept="application/json" title="ToDo: загрузка из файла">
						<button data-i18n="LOAD_ITEMS_FROM_FILE_BUTTON"  id="load-items" title="ToDo: сделать рядом с полем выбора. При загрузке - проверять json, выдавать ошибку при наличии. И переключаться на последний добавленный, или последний выбранный, если нет добавленных">Загрузить из файлов</button>
					</section>

								
					<div>
						<span data-i18n="TYPE_ITEM_CAPTION" title="ToDo:давать выбор или переход на тех героев, которым доступен этот тип предмета"></span>
						<select id="item-type-select" class="text-sized" title="ToDo: выпадающий список для выбора типа предмета">
							<option  data-i18n="Undefined" title="ToDo: здесь должны быть те типы, которые есть у введёных предметах.">ToDo: опция выпадайки</option>
							<option data-i18n="Undefined"  title="ToDo: должен быть выбран тот тип предмета, который соответствует текущему предмету" selected>ToDo: времянка с текущим типом</option>
						</select>
					</div>

					<section title="ToDo: блок с фильтрами по нейронам. Добавлять новые фильтры, показывать текущие.">
						<table id="neuron-filter-list" title="ToDo: здесь должны отображаться все активные фильтры, каждый в своей карточке">
							<tr title="ToDo: смены должны быть по правой кнопке, в том числе и удаление фильтра.">
								<th data-i18n="FILTER_TABLE_CAPTION"></th>
								<th data-i18n="FILTER_TABLE_NEURON"></th>
								<th data-i18n="FILTER_TABLE_MIN"></th>
								<th data-i18n="FILTER_TABLE_MAX"></th>
								<th data-i18n="FILTER_TABLE_BLOCK"></th>
								<th data-i18n="FILTER_TABLE_ACTIVE"></th>
							</tr>
							<tr title="ToDo:Пример одной карточки фильтра. Эта часть генерируется по фильтрам из IndexDB и заполняет. Последняя строка таблицы - для ввода новой.">
								<th data-i18n="FILTER_TABLE_CAPTION_MOCK"></th>
								<td data-i18n="FILTER_TABLE_NEURON_MOCK"></td>
								<td data-i18n="FILTER_TABLE_MIN_MOCK"></td>
								<td data-i18n="FILTER_TABLE_MAX_MOCK"></td>
								<td title="ToDo: Галочка для простановки запрета фильтра"></td>
								<td title="ToDo: Галочка для простановки активности фильтра"></td>
							</tr>
						</table>
	<!-- <div id="neuron-filter-list" title="ToDo: здесь должны отображаться все активные фильтры, каждый в своей карточке"> -->
		<!-- Пример одной карточки фильтра -->
		<!-- <div class="neuron-filter-card" title="ToDo: карточка одного фильтра нейрона"> -->
			<!-- <input class="neuron-key" list="neuron-list" placeholder="Нейрон..."  -->
			       <!-- title="ToDo: автопоиск по существующим нейронам, обязательное поле"> -->
			<!-- <datalist id="neuron-list" title="ToDo: список всех известных нейронов для автозаполнения"> -->
				<!-- Примеры -->
				<!-- <option value="Урон от холода"> -->
				<!-- <option value="Скорость атаки"> -->
			<!-- </datalist> -->

			<!-- <input type="number" class="neuron-min" placeholder="Мин."  -->
			       <!-- title="ToDo: минимальное значение нейрона, если указано — проверяется как >="> -->
			<!-- <input type="number" class="neuron-max" placeholder="Макс."  -->
			       <!-- title="ToDo: максимальное значение нейрона, если указано — проверяется как <="> -->
			
			<!-- <label title="ToDo: если стоит галочка — исключить предметы, у которых есть такой нейрон"> -->
				<!-- <input type="checkbox" class="neuron-exclude"> Запретить -->
			<!-- </label> -->

			<!-- <button class="disable-filter-button" title="ToDo: временно отключить фильтр (глаз)">👁️</button> -->
			<!-- <button class="delete-filter-button" title="ToDo: удалить этот фильтр (крестик)">❌</button> -->
		<!-- </div> -->
	<!-- </div> -->

	<!-- <button id="add-neuron-filter" title="ToDo: добавляет новую пустую карточку фильтра">+ Добавить фильтр</button> -->
<!-- </section> -->
						<div title="ToDo: блок фильтрации">					
							<h3>Фильтрация</h3>
							<input id="filter-input" type="text" placeholder="Свойство...">
							<select id="filter-mode">
								<option data-i18n="Undefined"  value="has">Содержит</option>
								<option data-i18n="Undefined"  value="min">Минимум</option>
								<option data-i18n="Undefined"  value="max">Максимум</option>
								<option data-i18n="Undefined"  value="range">Диапазон</option>
							</select>
							<label data-i18n="Undefined" title="ToDo: галочка для показа скрытых, только если есть скрытые">
								<input type="checkbox" title="ToDo: галочка для показа скрытых. Только, если есть какие-то скрытые в этом типе.">
								ToDo: показ скрытых
							</label>
							<button  data-i18n="Undefined" id="apply-filter">Применить фильтр</button>
						</div>
					</section>

					<section title="ToDo: таблица прочих предметов с учетом фильтра">
						<table id="similar-items" title="ToDo: таблица прочих предметов с учетом фильтра">
							<thead>
								<tr>
									<th data-i18n="TABLE_ITEMS_CAPTIONS_NAME"  title="ToDo: название предмета"></th>
									<th data-i18n="TABLE_ITEMS_CAPTIONS_FILTERS_MOCK" title="ToDo: параметры из фильтра, все и их значения. Учесть, что их может быть много."></th>
								</tr>
							</thead>
							<tbody>
								<tr title="ToDo: клик по предмету переключает на него">
									<td  data-i18n="TABLE_ITEMS_MOCK_ITEM_NAME" title="ToDo: название предмета">ToDo: предмет</td>
									<td  data-i18n="Undefined" title="ToDo: значения параметров фильтра. Учесть порядок который введён вверху">ToDo: значения</td>
									<td>
										<button data-i18n="Undefined"  title="ToDo: кнопка сокрытия предмета, в том числе всех">ToDo: скрыть предмет(ы)</button>
										<button data-i18n="Undefined"  title="ToDo: кнопка удаления предмета, в том числе всех">ToDo: удалить предмет(ы)</button>									
									</td>
								</tr>
							</tbody>
						</table>
					</section>

					<section title="ToDo: действия с предметом после клика">
					</section>	

			</div>
			<div id="tab-content-heroes" class="additional-info" title="ToDo: Здесь показывается то содержимое, которое нужно при работе, переключаясь между двумя сущностями. Сюда надо перенести из heroes. А здесь показывать название героя, его иконку и описание.">
				ToDo: времянка для показа героев подробно.
				<!-- Содержит визуал для работы с героем/героями -->
				<h2>Герои</h2>
				<h3 id="hero-title" title="todo: Если нет ни одного героя - должно скрываться.">
					<span data-i18n="Undefined"  id="hero-name" title="todo:имя героя, которое ставится в зависимости от выбранного">ToDo: времянка имени героя</span>
					<span id="hero-level" title="todo:уровень меняется от и до - см магические константы. при клике сюда - идёт предложение о смене уровня. Не ниже одетых шмоток и в пределах магических констант. при наведении на этот span должен появляться хинт `Сменить уровень?`. Рассмотри возможность применения тега label">(Уровень: <span  data-i18n="Undefined"  id="hero-level-number">ToDo: времянка уровень героя</span>)</span>
				</h3>
				<div data-i18n="Undefined"  id="hero-picture" title="todo:Если нет данных, то должен быть пустой квадрат. Иначе - картинка, подстроенная под желаемые размеры. Может svg, может base64, может url ссылка. А всё это поддерживать возможно? При клике сюда должно появляться предложение загрузить иконку.">
					ToDo: времянка для картинки героя
				</div>
				<button  data-i18n="Undefined" id="hero-add" title="ToDo:При нажатии сюда должен появляться вопрос браузерный(в будущем переделать на собственное красивое), который и узнает имя нового героя. Возможно надо переделать через label, чтобы читалось и понималось.">Добавить героя</button>
				<input type="text" title="ToDo: или имя должно вводиться в такое текстовое поле а кнопка добавить должна быть сбоку, чтобы сразу добавлять." placeholder="ToDO: времянка названия нового героя">
				<button data-i18n="Undefined"  id="hero-delete" title="ToDo:Сделать механизм, который будет спрашивать, согласны ли мы и удалять, если согласны, с последующим переключением на другого героя или блокировкой части интерфейса, если героев нет." onclick="confirm('ToDo: прописать нормальный текст с вопросом о согласии на удаление')">Удалить героя</button>
				<div  data-i18n="Undefined" id="hero-select" title="ToDo:механизм переключения между героями. Возможно с выбором, возможно переключением на следующий или предыдущий экземпляр">
					ToDo: времянка для переключения между героями.
				</div>
				<div>
					<label  data-i18n="Undefined" title="ToDo: Оформить это всё красиво">Описание</label>
					<textarea  data-i18n="Undefined"  id="hero-description" title="ToDo: описание должно загружаться при выборе героя. При его смене или при закрытии окна - описание должно сохраняться в того героя, который был активным. Т.е. оно изменяемое">ToDO:времянка для описания героя.</textarea>
				</div>
				<div>
					<label data-i18n="Undefined" >Инвентарь</label>
					<span id="hero-percent-wear" title="ToDo: Здесь должен отображаться процент одетости персонажа"></span>
					<table title="ToDo:Сделай с учётом своего любимого стиля. И как-то при render надо зачищать не всю таблицу, а всё, кроме заголовков - они то уже введены.">
						<tr>
							<th data-i18n="Undefined" >ToDo: времянка заголовка - тип предмета</th>
							<th data-i18n="Undefined" >ToDo: времянка заголовка - сами предметы</th>
							<th data-i18n="Undefined" >ToDo: времянка заголовка - комментарии о лучших вариантах, если есть</th>
							<th data-i18n="Undefined" >ToDo: времянка заголовка - управляющие кнопки</th>
						</tr>
						<tr title="ToDo: эти строки должны быть сгенерированы для каждого героя. Со стилем и классами - придумай и добавь, чтобы все были попроще и одинаковыми. Как-то надо добавить возможность переключить количество разрешённых объектов для категории">
							<th data-i18n="Undefined"  title="ToDo:Сортировка по тем значениям, которые я введу(куда? что за магические константы? Вроде шлем-амулет-броня-... При необходимости - rowspan, ибо для некоторых категорий разрешено ношение нескольких предметов. Щелчок по категории - переходим к этой категории.">ToDo: времянка типа предмета.</th>
							<td data-i18n="Undefined"  title="ToDo: Выводим конкретные предметы. При необходимости - друг под другом. И надо, чтобы при наведении на предмет - где-то отображалось, что это за предмет, его состав. Щелчок по предмету - перейти к этому предмету."></td>
							<td data-i18n="Undefined"  title="ToDo: Здесь выводим тот предмет, который лучше уже одетого, с учётом свободности, доступности по уровню. При необходимости - помечаем, с какого уровня будет доступен тот предмет, на котором мы находимся.">ToDo: времянка с комментарием, вроде "Есть стальной на +5%"</td>
							<td data-i18n="Undefined"  title="ToDo: специальная колонка, я не знаю, буду ли пользоваться ею, но здесь нужна кнопка для снятия предмета.">ToDo: времянка кнопок управления</td>
						</tr>		
						<tr title="ToDo: последний блок вещей - те, про которые мы пока не знаем, будет ли носить их наш герой. При клике по ним должна также переключаться, но естественно здесь ничего не выводить">
							<td  data-i18n="Undefined" >
								ToDo: времянка для неопределившихся категорий.
							</td>
						</tr>
					</table>
				</div>	
			</div>
			<div id="tab-content-neurons" class="additional-info" title="ToDo: здесь блок с нейронами, которые нужны для показа/пряток самих нейронов, их задания в виде nocode. Здесь показывается то содержимое, которое нужно при работе, переключаясь между двумя сущностями. Сюда надо перенести из properties. А в самой вкладке - только оставить информацию, есть ли не заданные нейроны.">
				ToDo: времянка для показа нейронов подробно.
				<table title="Эта штука должна содержать все нейроны, которые уже обрабатываются">
					<tr title="ToDo: А объявлять нейроны не значимые для этого героя? И их прям прятать, не показывать. Тоже надо добавить?">
						<th data-i18n="Undefined"  title="ToDo: Эта штука должна храниться в БД и вызываться">ToDo: Название нейрона</th>
						<th data-i18n="Undefined"  title="ToDo: Эта штука должна храниться в БД и вызываться">ToDo: его регулярка</th>
						<th data-i18n="Undefined"  title="ToDo: Эта штука должна храниться в БД и вызываться">ToDo: участвует в красивом выводе</th>
						<th  data-i18n="Undefined" title="ToDo: Эта штука должна храниться в БД и вызываться">ToDo: участвует в нейронной сети</th>
						<th data-i18n="Undefined"  title="ToDo: Эта штука должна храниться в БД и вызываться">ToDo: </th>
						<th  data-i18n="Undefined"  title="ToDo: Эта штука должна храниться в БД и вызываться">ToDo: блокирующее, ибо связанный нейрон</th>
					</tr>
					<tr>
						<th data-i18n="Undefined" >ToDo:времянка название нейрона</th>
						<th  data-i18n="Undefined" >ToDo:текст регулярки</th>					
						<td><input type="checkbox" title="ToDo: отметить свойство как участвующее в красивом выводе">ToDo: красивость свойства</td>
						<td><input type="checkbox" title="ToDo: отметить свойство как значимое для нейронной сети">ToDo: значимость свойства</td>
						<td></td>
						<td><div  data-i18n="Undefined" title="ToDo: настройка блокировки свойств, чтобы одно исключало другое. Возможно выбор через select и запретом циклического выбора ещё на этапе select.">ToDo: блокировка свойств, как например +к броне, если есть полное свойство броня. Или для урона</div></td>
					</tr>
					<tr title="ToDo: сделать формой для сбора и отправки?">
						<td><input type="text" title="ToDo: поле для ввода названия нейрона" placeholder="ToDo: название"></td>
						<td><input type="text" title="ToDo: поле для ввода регулярного выражения. Проверять, что сработает хотя бы на одном предмете во всём массиве." placeholder="ToDo: регулярка"></td>
						<td data-i18n="Undefined" title="ToDo: остальные свойства из таблицы выше перенеси сюда же.">ToDo:прочие свойства</td>
					</tr>
				</table>
				<section title="ToDo: показ ещё не заданных свойств из предметов и предложение по ним?">
					<div data-i18n="Undefined" title="ToDo: показ незакреплённых свойств и предложения по ним">ToDo: незакреплённые свойства</div>
				</section>
			</div>
		</div>
		
		<div id="comparison-bar" title="TODO: В этом месте должны выводиться все предметы, которые мы сравниваем. Занимает треть высоты и располагается в верхней трети.">
			<table title="ToDo:таблица сравнения предметов. таблица с названиями колонок - название предмета с пометкой текущий/наведёный/одетый">
                <thead>
				<tr>
					<td data-i18n="Undefined" title="ToDo:Заглушка чтобы было пустое"></td>
					<th data-i18n="Undefined" >ToDo: заглушка Текущий выбранный</th>
					<th data-i18n="Undefined" >ToDo: заглушка Наведённый мышкой</th>
					<th data-i18n="Undefined" title="ToDo: Учесть, что может быть одето больше одного предмета">ToDo: заглушка Одетый на героя</th>
				</tr>
                </thead>
                <tbody title="ToDo: подумать, нужна ли мне такая поддержка семантики">
				<tr title="ToDo:свойства - у текущего все свойства и те, которые отличаются, комбинация свойств полная,">
					<th data-i18n="Undefined" title="ToDo:Первыми свойства одетых предметов. Вторым - выбранный предмет, последним - те, на кого навели мышкой.">ToDo:Заголовок свойства</th>
					<td data-i18n="Undefined" title="ToDo: выделять красным то, что ниже чем ... зелёным - то что выше, чем ... Синим - тексты.">ToDo:Пример значения</td>
				</tr>
                </tbody>
			</table>
		</div>
		
		<main title="ToDo:эта область для основного функционала, т.е. здесь как раз мы и назначаем те самые сравнения, по которым должна учиться нейронная сеть и выдавать нам результаты. Делаем либо кликами, либо перетягиванием. Должен поддерживаться перенос из списка предметов и из одетых вещей героя. При наведении стрелок - проверять на транзитивность. Принцип расположения квадратиков - слева сверху вниз направо по ЧУМ. расположение по ЧУМ - сначала без верхних, убрать связи, случайная сортировка. Случайная сортировка всех, чтобы незаданные были то выше, то ниже.">
			<div id="main-diagram">
			
				<div data-i18n="Undefined" title="ToDo: квадрат с названием, фиксированный размер, шрифт подстраивается, чтобы название поместилось">ToDo: название в квадрате 1</div>
				<div data-i18n="Undefined" title="ToDo: квадрат с названием, фиксированный размер, шрифт подстраивается, чтобы название поместилось">ToDo: название в квадрате 2</div>
				<div data-i18n="Undefined" title="ToDo: квадрат с названием, фиксированный размер, шрифт подстраивается, чтобы название поместилось">ToDo: название в квадрате 3</div>
				
				<div data-i18n="Undefined" title="ToDo: стрелка должна рисоваться жирным в случае, когда я задал, что такой порядок">ToDo: стрелка 1</div>
				<div data-i18n="Undefined" title="ToDo: стрелка должна рисоваться пунктиром в случае, когда его посчитала сеть. Толще при высоких значениях. Минимум для рисования стрелки 0.6">ToDo: стрелка 2</div>
				<div data-i18n="Undefined" title="ToDo: стрелки должны иметь историю, чтобы я мог отменять последнею наведённую. Как? Пока не знаю.">ToDo: стрелка 3</div>
				<div data-i18n="Undefined" title="ToDo: стрелки должны рисоваться волнисто, если они получаются по транзитивности. Важно, для новой стрелки надо считать вес исходя из произведения в цепочке. То есть два веса в 0.8 породят стрелку 0.64, а два веса в 0.7 не породят стрелку.">ToDo: стрелка 4</div>
			</div>
					
			<div id="bad-items-no-compare" title="ToDo: поле для несравниваемых в самом низу" title="ToDo:перенос предмета сюда должен превратить его в несравниваемого - все, кто точно был под ним, точно должны упасть сюда. Это сделано для того, чтобы брать предметы всё лучше и лучше.">
				<input type="checkbox" title="ToDo:сделать скрытие и показ для скрытых">
				<input type="checkbox" title="ToDo:сделать скрытие и показ для убранных в несравниваемое">
				<div data-i18n="Undefined" title="ToDo: поле для несравниваемых">ToDo: поле несравниваемых. Список неподходящих предметов
				</div>
			</div>
			
			<div id="craft-compare" title="ToDo: учесть, что есть возможность докрафта. Соответственно - эта доп. область нужна для переключения расчёта. Как его делать - я пока не знаю. Важно - учитывать только доступные префиксы/суфиксы. Предупреждать, что это долгий процесс. И если при учёте докрафта всё равно в минусе - быть честным. Для предметов кстати нужна кнопка Обновить на докрафченную вещь(со сбросом сравнений, а те кто были связаны - по транизитивности остаются)">
			</div>
		</main>

		<!-- Строка состояния -->
		<div data-i18n="STATUS_BAR_DEFAULT" id="status-bar" title="ToDo: Заполнять на каждом этапе, чтобы было понятно что и как происходит.">
			Готов к работе.
		</div>
		
	</div>

	
	<div id="loading-overlay" class="loading-overlay" style="display:none;">
		<div class="loading-spinner"></div>
		<div no-data-i18n id="loading-text">Загрузка...</div>
	</div>
	
	<!-- Классы (без зависимостей, подключаются первыми) -->
	<script src="data/classes/Item.js"></script>
	<script src="data/classes/Hero.js"></script>
	<script src="data/classes/Neuron.js"></script>

	<!-- Базовые утилиты и константы -->
	<script src="constants.js"></script>
	<script src="data/db.js"></script>
	<script src="data/cache.js"></script>

	<!-- Менеджеры логики -->
	<script src="logic/itemManager.js"></script>
	<script src="logic/heroManager.js"></script>
	<script src="logic/filterLogic.js"></script>
	<script src="logic/dragAndCompare.js"></script>
	<script src="logic/neuronWork.js"></script>

	<!-- Работа с UI -->
	<script src="ui/domCache.js"></script>
	<script src="ui/navTab.js"></script>
	<script src="ui/statusBar.js"></script>
	<script src="ui/loadingBar.js"></script>
	<script src="ui/render.js"></script>
	<script src="ui/neuronView.js"></script>
	<script src="ui/itemUI.js"></script>

	<!-- Глобальное состояние и точка входа -->
	<script src="state.js"></script>
	<script src="app.js"></script>
	
	<!-- Ресурсы и работа с ними -->
	<script src="resource/locale-ru.js"></script>
	<script src="resource/hint-ru.js"></script>
	<script src="ui/loadResource.js"></script>
</body>
</html>