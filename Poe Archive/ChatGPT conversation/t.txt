–ü—Ä–∏–≤–µ—Ç. –ö–∞–∫–∏–µ —É —Ç–µ–±—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —à–∞–±–ª–æ–Ω—ã –≤ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ–µ–∫—Ç–µ?
ChatGPT —Å–∫–∞–∑–∞–ª:

–í —Ç–µ–∫—É—â–µ–º –ø—Ä–æ–µ–∫—Ç–µ —É —Ç–µ–±—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–±–ª–æ–Ω—ã:

todo-title-—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è ‚Äî —à–∞–±–ª–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π:

–ò—â–µ—Ç HTML-—ç–ª–µ–º–µ–Ω—Ç—ã —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º title, –Ω–∞—á–∏–Ω–∞—é—â–∏–º—Å—è –Ω–∞ ToDo:.

–ò–∑–≤–ª–µ–∫–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–∑ title.

–ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∑–∞–¥–∞—á–∏ (HTML, CSS, JS) —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∏–∑ rules.md:

–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π ‚Äî –≤ JS, –∞ –Ω–µ –≤ HTML;

—Å—Ç–∏–ª–∏ ‚Äî –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º CSS-—Ñ–∞–π–ª–µ;

–∏–º–µ–Ω–∞ ‚Äî –ø–æ –∫–æ–Ω–≤–µ–Ω—Ü–∏—è–º (PascalCase, camelCase, kebab-case –∏ —Ç. –¥.).

—á–µ—Ç–≤—ë—Ä–∫–∞-–∞—Å–ø–µ–∫—Ç—ã-—Å—Ü–µ–Ω—ã ‚Äî —à–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∏ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ü–µ–Ω:

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∏–Ω–∏—Å—Ü–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ 4 –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–§—ç–Ω—Ç–µ–∑–∏, –£–∂–∞—Å, –î–µ—Ç–µ–∫—Ç–∏–≤, –ü–æ–¥—Ä–æ—Å—Ç–æ–∫).

–£ –∫–∞–∂–¥–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –µ—Å—Ç—å –±–æ–Ω—É—Å –∏ —à—Ç—Ä–∞—Ñ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π.

–ù–∞ —à–∞–≥–µ 3 —Å–æ–∑–¥–∞—é—Ç—Å—è 4 –º–∏–Ω–∏—Å—Ü–µ–Ω—ã ‚Äî –ø–æ –æ–¥–Ω–æ–π –Ω–∞ –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —Å –æ–±—ã–≥—Ä—ã–≤–∞–Ω–∏–µ–º –±–æ–Ω—É—Å–∞ –∏ —à—Ç—Ä–∞—Ñ–∞.

–•–æ—á–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–ª–∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –∏–∑ –Ω–∏—Ö?

–í—ã —Å–∫–∞–∑–∞–ª–∏:
–í—ã–ø–æ–ª–Ω–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ todo-title-—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è, –Ω–æ —Å —á–µ–º-—Ç–æ, —á—Ç–æ –¥–∞—Å—Ç –±–æ–ª—å—à–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞, –∞ –Ω–µ –∫—Ä–∞—Å–æ—Ç—ã.
ChatGPT —Å–∫–∞–∑–∞–ª:

–í–æ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–∞–Ω–¥–∏–¥–∞—Ç –∏–∑ —Ç–≤–æ–µ–≥–æ HTML-—Ñ–∞–π–ª–∞ (index.html):

<div id="tab-nav-neurons" data-i18n="NEURON_MOCK" title="ToDo: –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –Ω–µ–π—Ä–æ–Ω—ã - —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –≤–æ–æ–±—â–µ –∏ –≤ —Ç–µ–∫—É—â–µ–º —Ç–∏–ø–µ.">
</div>

üìå –ó–∞–¥–∞—á–∞:

"–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –Ω–µ–π—Ä–æ–Ω—ã ‚Äî —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –≤–æ–æ–±—â–µ –∏ –≤ —Ç–µ–∫—É—â–µ–º —Ç–∏–ø–µ."

‚úÖ –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è:
üì¶ 1. HTML (–æ—Å—Ç–∞–≤–∏–º div –ø—É—Å—Ç—ã–º ‚Äî –æ–Ω –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω—è—Ç—å—Å—è —Å–∫—Ä–∏–ø—Ç–æ–º):
<div id="tab-nav-neurons" data-i18n="NEURON_MOCK" title="ToDo: –∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –Ω–µ–π—Ä–æ–Ω—ã - —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –≤–æ–æ–±—â–µ –∏ –≤ —Ç–µ–∫—É—â–µ–º —Ç–∏–ø–µ.">
</div>

üß† 2. JS (–Ω–æ–≤—ã–π –º–æ–¥—É–ª—å ui/neuronSummary.js):
// ui/neuronSummary.js
(function () {
	async function updateNeuronSummary() {
		const neurons = await DB.getAllNeurons();
		const items = await DB.getAllItems();
		const currentType = State.CurrentItem?.type;

		const allNeurons = new Set();
		const usedNeurons = new Set();

		for (const item of items) {
			if (item.type === currentType || !currentType) {
				for (const key in item.neurons) {
					usedNeurons.add(key);
				}
			}
			for (const key in item.neurons) {
				allNeurons.add(key);
			}
		}

		const unknownNeurons = [...usedNeurons].filter(n => !neurons.some(k => k.key === n));
		const unknownGlobal = [...allNeurons].filter(n => !neurons.some(k => k.key === n));

		const container = document.getElementById("tab-nav-neurons");
		container.innerText =
			`–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –≤ —Ç–µ–∫—É—â–µ–º —Ç–∏–ø–µ: ${unknownNeurons.length}, –≤—Å–µ–≥–æ: ${unknownGlobal.length}`;
	}

	window.UpdateNeuronSummary = updateNeuronSummary;
})();

üîÑ 3. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ index.html:

–î–æ–±–∞–≤—å –≤ –∫–æ–Ω–µ—Ü –±–ª–æ–∫–∞ <script>:

<script src="ui/neuronSummary.js"></script>

üöÄ 4. –í—ã–∑–æ–≤ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:

–í render.js (–∏–ª–∏ –≤ —Ç–æ–º –º–µ—Å—Ç–µ, –≥–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏–ª–∏ —Å–º–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞):

UpdateNeuronSummary();


–•–æ—á–µ—à—å, —è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—é —ç—Ç–æ –≤ —Ç–≤–æ–π –ø—Ä–æ–µ–∫—Ç –≤ Canvas –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –≤—ã–¥–∞–º –∫–∞–∫ —Ñ–∞–π–ª—ã?

–í—ã —Å–∫–∞–∑–∞–ª–∏:
–Ø –ø–æ–Ω—è–ª, —á—Ç–æ –º–µ–Ω—è —Å–º—É—â–∞–µ—Ç.
–ú–Ω–µ –Ω–∞–¥–æ –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∏ –ø–æ–ª—É—á–∞—Ç—å —Ç–µ –∏–∑ –Ω–∏—Ö, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –Ω–µ–π—Ä–æ–Ω–∞–º–∏.
–ê —É —Ç–µ–±—è –≤–∞—Ä–∏–∞–Ω—Ç, –∫–æ–≥–¥–∞ —Ç—ã –ø—Ä–æ–≤–µ—Ä—è–µ—à—å –Ω–µ–π—Ä–æ–Ω—ã –Ω–∞–ø—Ä–µ–¥–º–µ—Ç –∏—Ö —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–µ–¥–º–µ—Ç–∞—Ö.
–ü—Ä–µ–¥–ª–æ–∂–∏ –≤–∞—Ä–∏–∞–Ω—Ç –≤ –æ–±—Ä–∞—Ç–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É, –∫–∞–∫ —è –æ–ø–∏—Å–∞–ª –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ –¥–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
ChatGPT —Å–∫–∞–∑–∞–ª:

–¢—ã –ø—Ä–∞–≤, —Ç–µ–∫—É—â–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç: –µ—Å—Ç—å –ª–∏ —É –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–µ–π—Ä–æ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.
–ê —Ç–µ–±–µ –Ω—É–∂–Ω–æ:
–≤–∑—è—Ç—å –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ ‚Üí –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É ‚Üí –∫–∞–∫–∏–µ –Ω–µ –ø–æ–∫—Ä—ã–≤–∞—é—Ç—Å—è –Ω–∏ –æ–¥–Ω–∏–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º –Ω–µ–π—Ä–æ–Ω–æ–≤.

‚úÖ –ù–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º: "–°—Ç—Ä–æ–∫–∏ –±–µ–∑ –Ω–µ–π—Ä–æ–Ω–æ–≤"

–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤.

–ò–∑–≤–ª–µ—á—å –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ (—Å–≤–æ–π—Å—Ç–≤–∞) –∏–∑ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.

–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–µ–≥—É–ª—è—Ä–∫–∏ –Ω–µ–π—Ä–æ–Ω–æ–≤ –∏–∑ –ë–î.

–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –º–∞—Ç—á–∞—Ç—Å—è –Ω–∏ –æ–¥–Ω–æ–π —Ä–µ–≥—É–ª—è—Ä–∫–æ–π.

–í–µ—Ä–Ω—É—Ç—å –∏—Ö —Å–ø–∏—Å–æ–∫ –∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∫–∞–∑–∞—Ç—å —Å—á—ë—Ç—á–∏–∫.

üì¶ –†–µ–∞–ª–∏–∑–∞—Ü–∏—è (JS, –≤ –º–æ–¥—É–ª–µ ui/neuronSummary.js):
// ui/neuronSummary.js
(function () {
	async function updateNeuronSummary() {
		const items = await DB.getAllItems();
		const neurons = await DB.getAllNeurons();

		const regexList = neurons.map(n => {
			try {
				return new RegExp(n.regex, "i");
			} catch {
				return null;
			}
		}).filter(r => r);

		const unmatchedLines = [];

		for (const item of items) {
			if (!Array.isArray(item.textLines)) continue;

			for (const line of item.textLines) {
				if (!regexList.some(r => r.test(line))) {
					unmatchedLines.push(line);
				}
			}
		}

		const container = document.getElementById("tab-nav-neurons");
		container.innerText = `–ù–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫: ${unmatchedLines.length}`;
	}

	window.UpdateNeuronSummary = updateNeuronSummary;
})();

üîÑ –ü—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏—è:

item.textLines ‚Äî –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –∏–∑ CTRL+C —Ç–µ–∫—Å—Ç–∞ –ø—Ä–µ–¥–º–µ—Ç–∞. –ï—Å–ª–∏ —É —Ç–µ–±—è –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç ‚Äî —Å–∫–∞–∂–∏, –ø–æ–¥–ø—Ä–∞–≤–∏–º.

–†–µ–≥—É–ª—è—Ä–∫–∏ –Ω–µ–π—Ä–æ–Ω–æ–≤ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–æ–ª–µ regex.

–•–æ—á–µ—à—å, —á—Ç–æ–±—ã —è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤—ã–≤–µ–ª –ø—Ä–∏–º–µ—Ä—ã –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–≤—ã–µ 5)?

–í—ã —Å–∫–∞–∑–∞–ª–∏:
–ê –º–æ–∂–µ—à—å –¥–æ–ø–æ–ª–Ω–∏—Ç—å, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä—è–ª–æ—Å—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å—Ç—Ä–æ–∫ –≤ —Ç–µ–∫—É—â–µ–º —Ç–∏–ø–µ, –∏ –æ—Ç–¥–µ–ª—å–Ω–æ - —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –Ω–µ–ø—Ä–æ—Ö–æ–¥—è—â–∏—Ö —Ç–µ—Å—Ç—ã —Å—Ç—Ä–æ–∫ –≤–æ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö.
–¢—ã –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –≤–∞—Ä–∏–∞–Ω—Ç–µ –∫–∞–∫-—Ç–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å–æ–±–∏—Ä–∞–ª–∞ —Ç–∞–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.
ChatGPT —Å–∫–∞–∑–∞–ª:

–û—Ç–ª–∏—á–Ω–æ, –¥–æ–±–∞–≤–∏–º –¥–≤—É—Ö—É—Ä–æ–≤–Ω–µ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:

badCurrentTypeCount ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –±–µ–∑ –Ω–µ–π—Ä–æ–Ω–æ–≤ –≤ —Ç–µ–∫—É—â–µ–º —Ç–∏–ø–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤.

badTotalCount ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–∫–∏—Ö —Å—Ç—Ä–æ–∫ –≤–æ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö.

üß† –û–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è (ui/neuronSummary.js):
(function () {
	async function updateNeuronSummary() {
		const items = await DB.getAllItems();
		const neurons = await DB.getAllNeurons();
		const currentType = State.CurrentItem?.type;

		const regexList = neurons.map(n => {
			try {
				return new RegExp(n.regex, "i");
			} catch {
				return null;
			}
		}).filter(r => r);

		let badTotalCount = 0;
		let badCurrentTypeCount = 0;

		for (const item of items) {
			if (!Array.isArray(item.textLines)) continue;
			const isCurrentType = item.type === currentType;

			for (const line of item.textLines) {
				const matched = regexList.some(r => r.test(line));
				if (!matched) {
					badTotalCount++;
					if (isCurrentType) badCurrentTypeCount++;
				}
			}
		}

		const container = document.getElementById("tab-nav-neurons");
		container.innerText = `–ù–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫: ${badCurrentTypeCount} (–≤ —Ç–µ–∫—É—â–µ–º —Ç–∏–ø–µ) / ${badTotalCount} (–≤—Å–µ–≥–æ)`;
	}

	window.UpdateNeuronSummary = updateNeuronSummary;
})();


–ï—Å–ª–∏ —Ö–æ—á–µ—à—å:

—Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∞–º–∏—Ö —Å—Ç—Ä–æ–∫, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –Ω–µ–π—Ä–æ–Ω—ã –¥–ª—è –Ω–∏—Ö;

–≤—ã–≤–æ–¥–∏—Ç—å –∏—Ö –≤ –æ—Ç–ª–∞–¥–∫—É –∏–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ;

‚Äî —Å–∫–∞–∂–∏, —è –¥–æ–±–∞–≤–ª—é.

–í—ã —Å–∫–∞–∑–∞–ª–∏:
–î–∞, –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è.
–ù–∞–¥–æ –µ—â—ë –¥–æ–±–∞–≤–∏—Ç—å –∑–Ω–∞–Ω–∏–µ –æ –ø–µ—Ä–≤–æ–π –ø–æ–ø–∞–≤—à–µ–π—Å—è —Å—Ç—Ä–æ–∫–µ –∏ –≤ —Å–ª—É—á–∞–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Ç–∏–ø–∞, –∏ –±–µ–∑ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Ç–∏–ø–æ–≤. –ß—Ç–æ–±—ã –ø–æ—Ç–æ–º –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–µ–¥–º–µ—Ç—É —Å –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π.
–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –∫–∞–∫ –∏—Ö –≤—ã–≤–æ–¥–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.
ChatGPT —Å–∫–∞–∑–∞–ª:

–û—Ç–ª–∏—á–Ω–æ, –¥–æ–±–∞–≤–∏–º:

firstBadLineGlobal ‚Äî –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –±–µ–∑ –Ω–µ–π—Ä–æ–Ω–∞ –≤–æ–æ–±—â–µ;

firstBadLineCurrentType ‚Äî –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –±–µ–∑ –Ω–µ–π—Ä–æ–Ω–∞ –≤ —Ç–µ–∫—É—â–µ–º —Ç–∏–ø–µ;

—Ç–∞–∫–∂–µ ‚Äî firstItemGlobal, firstItemCurrentType ‚Äî —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã.

üì¶ –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –∫–æ–¥ ui/neuronSummary.js:
(function () {
	let firstBadLineGlobal = null;
	let firstItemGlobal = null;
	let firstBadLineCurrentType = null;
	let firstItemCurrentType = null;

	async function updateNeuronSummary() {
		const items = await DB.getAllItems();
		const neurons = await DB.getAllNeurons();
		const currentType = State.CurrentItem?.type;

		const regexList = neurons.map(n => {
			try {
				return new RegExp(n.regex, "i");
			} catch {
				return null;
			}
		}).filter(r => r);

		let badTotalCount = 0;
		let badCurrentTypeCount = 0;

		firstBadLineGlobal = null;
		firstItemGlobal = null;
		firstBadLineCurrentType = null;
		firstItemCurrentType = null;

		for (const item of items) {
			if (!Array.isArray(item.textLines)) continue;
			const isCurrentType = item.type === currentType;

			for (const line of item.textLines) {
				const matched = regexList.some(r => r.test(line));
				if (!matched) {
					badTotalCount++;
					if (!firstBadLineGlobal) {
						firstBadLineGlobal = line;
						firstItemGlobal = item;
					}
					if (isCurrentType) {
						badCurrentTypeCount++;
						if (!firstBadLineCurrentType) {
							firstBadLineCurrentType = line;
							firstItemCurrentType = item;
						}
					}
				}
			}
		}

		const container = document.getElementById("tab-nav-neurons");
		container.innerText = `–ù–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫: ${badCurrentTypeCount} (–≤ —Ç–µ–∫—É—â–µ–º —Ç–∏–ø–µ) / ${badTotalCount} (–≤—Å–µ–≥–æ)`;
	}

	window.UpdateNeuronSummary = updateNeuronSummary;

	// üëá –î–æ—Å—Ç—É–ø –∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º, –∫–æ–≥–¥–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è
	window.__NeuronDebugInfo = {
		getFirstBadLineGlobal: () => ({ line: firstBadLineGlobal, item: firstItemGlobal }),
		getFirstBadLineCurrentType: () => ({ line: firstBadLineCurrentType, item: firstItemCurrentType })
	};
})();


–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏ –∏–ª–∏ –∏–∑ –∫–æ–¥–∞ –≤—ã–∑–≤–∞—Ç—å:

__NeuronDebugInfo.getFirstBadLineGlobal();
__NeuronDebugInfo.getFirstBadLineCurrentType();


‚Äî –∏ –ø–æ–ª—É—á–∏—Ç—å { line, item }.

–ì–æ—Ç–æ–≤–æ. –•–æ—á–µ—à—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äî –≤—ã–≤–æ–¥ –≤ UI, –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç—å –Ω–µ–π—Ä–æ–Ω?

–í—ã —Å–∫–∞–∑–∞–ª–∏:
–ê –ø–æ—á–µ–º—É —Ç—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å –ø–æ–ª–æ–∂–∏—Ç—å —ç—Ç—É –æ–±—Ä–∞–±–æ—Ç–∫—É –≤ ui?
–î—Ä—É–≥–∏–µ –ø–∞–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç–µ - assets, css, data, logic, readme, resource. –ß–µ–º –æ–Ω–∏ –Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç?
ChatGPT —Å–∫–∞–∑–∞–ª:

–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, –ø–∞–ø–∫–∞ ui/ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å —Ç–µ–º, —á—Ç–æ —Ç—ã —Ç–∞–º —É–∂–µ –¥–µ—Ä–∂–∏—à—å render.js, domCache.js, statusBar.js ‚Äî —Ç.–µ. –≤–∏–∑—É–∞–ª—å–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã.

–ù–æ –ø–æ —Å–º—ã—Å–ª—É —Ç–≤–æ—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ ‚Äî —ç—Ç–æ –ª–æ–≥–∏–∫–∞, –∞ –Ω–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å. –û–Ω–∞:

—Ö–æ–¥–∏—Ç –≤ –ë–î (DB.getAllItems(), getAllNeurons()),

–ø—Ä–æ–≤–æ–¥–∏—Ç –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä–æ–∫ –ø–æ —Ä–µ–≥—É–ª—è—Ä–∫–∞–º,

—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (firstBadLine*, firstItem*),

–∏ —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Ü–µ –ø–∏—à–µ—Ç –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –≤ UI.

üì¶ –õ—É—á—à–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –≤ logic/

–ù–∞–ø—Ä–∏–º–µ—Ä:

logic/neuronSummary.js


–≠—Ç–æ –±—É–¥–µ—Ç –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ –æ—Ç—Ä–∞–∂–∞—Ç—å —Å—É—Ç—å ‚Äî "–≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –ø–æ –Ω–µ–π—Ä–æ–Ω–∞–º", –∏ —É–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –≤ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ç–≤–æ–µ–≥–æ rules.md:

7. –§–∞–π–ª—ã —Å –ª–æ–≥–∏–∫–æ–π –Ω–µ –±–æ–ª—å—à–µ 200 —Å—Ç—Ä–æ–∫.
14. –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ‚Äî –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ (async/await).

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–Ω–æ—Å–∞:

logic/neuronSummary.js ‚Äî –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ.

ui/render.js –∏–ª–∏ ui/navTab.js ‚Äî –º–æ–≥—É—Ç –ø—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞—Ç—å UpdateNeuronSummary().

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å, –º–æ–≥—É —Å—Ä–∞–∑—É –¥–∞—Ç—å –≤–µ—Ä—Å–∏—é, –≥–¥–µ updateNeuronSummary() —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ UI.

–í—ã —Å–∫–∞–∑–∞–ª–∏:
–û–∫–µ–π, —è –ø–æ–Ω—è–ª —Å—Ö–µ–º—É, –Ω–æ —ç—Ç–æ—Ç –∫–æ–¥ —Å—Ä–∞–∑—É –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç.
–ö–∞–∫ –º–∏–Ω–∏–º—É–º - DB.getAllItems(); DB.getAllNeurons(); –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã.
–ì–¥–µ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å?
ChatGPT —Å–∫–∞–∑–∞–ª:

–û—Ç–ª–∏—á–Ω–æ, —á—Ç–æ –∑–∞–º–µ—Ç–∏–ª! –≠—Ç–∏ –≤—ã–∑–æ–≤—ã DB.getAllItems() –∏ DB.getAllNeurons() –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—é—Ç, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç DB, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç API –∫ IndexedDB.

üìå –ì–¥–µ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å?

–°—É–¥—è –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ index.html, –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ data/db.js, –ø–æ—Ç–æ–º—É —á—Ç–æ:

<script src="data/db.js"></script>


–ê –∑–Ω–∞—á–∏—Ç, —Ñ–∞–π–ª db.js ‚Äî —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è DB, —Å –º–µ—Ç–æ–¥–∞–º–∏ —Ç–∏–ø–∞:

DB = {
	getAllItems: async function () { /* ... */ },
	getAllNeurons: async function () { /* ... */ }
};

üìã –ß—Ç–æ –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ db.js
1. –ú–µ—Ç–æ–¥ getAllItems():
getAllItems: async function () {
	const db = await openDB(); // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å openDB()
	const tx = db.transaction('items', 'readonly');
	const store = tx.objectStore('items');
	return await store.getAll();
}

2. –ú–µ—Ç–æ–¥ getAllNeurons():
getAllNeurons: async function () {
	const db = await openDB();
	const tx = db.transaction('neurons', 'readonly');
	const store = tx.objectStore('neurons');
	return await store.getAll();
}

3. openDB() ‚Äî —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –±–∞–∑—ã:
async function openDB() {
	return await new Promise((resolve, reject) => {
		const request = indexedDB.open("poe2-db", 1);
		request.onsuccess = () => resolve(request.result);
		request.onerror = () => reject(request.error);
	});
}

üß† –ì–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–∞–±–ª–∏—Ü—ã (–æ–±—ä–µ–∫—Ç—ã —Ö—Ä–∞–Ω–∏–ª–∏—â–∞):

–í DB –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º —ç—Ç–∏ –¥–≤–∞ object store:

"items" ‚Äî –∫–∞–∂–¥—ã–π –ø—Ä–µ–¥–º–µ—Ç, —Å –ø–æ–ª–µ–º textLines –∏ type

"neurons" ‚Äî —Å –ø–æ–ª—è–º–∏ key, regex –∏ —Ç.–ø.

–•–æ—á–µ—à—å, —è –ø–æ–º–æ–≥—É —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —ç—Ç–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –≤ db.js –ø–æ —Ç–≤–æ–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ?

–í—ã —Å–∫–∞–∑–∞–ª–∏:
–°–ª—É—à–∞–π, —è –∑–∞–ø—É—Ç–∞–ª—Å—è - –º—ã –ø–æ–ª—É—á–∏–ª–∏ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å?
–ê –∫–∞–∫ –±—ã —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã —Ç–≤–æ–π –º–µ—Ç–æ–¥ –±—ã–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, –∞ –≤ ui –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏?
ChatGPT —Å–∫–∞–∑–∞–ª:

–¢—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–º–µ—Ç–∏–ª ‚Äî —Å–µ–π—á–∞—Å –º–µ—Ç–æ–¥ updateNeuronSummary() –∏ —Å–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –∏ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç UI, —á—Ç–æ –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏.

üéØ –¶–µ–ª—å: —Ä–∞–∑–¥–µ–ª–∏—Ç—å –Ω–∞ –¥–≤–∞ —Å–ª–æ—è

logic/neuronSummary.js ‚Äî –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∑–∞ —Å–±–æ—Ä –∏ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö.

ui/neuronSummaryView.js ‚Äî –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∑–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é.

‚úÖ –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å
1. logic/neuronSummary.js ‚Äî —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏–∫–∞
// logic/neuronSummary.js
(function () {
	async function getNeuronAnalysisSummary(currentType) {
		const items = await DB.getAllItems();
		const neurons = await DB.getAllNeurons();

		const regexList = neurons.map(n => {
			try {
				return new RegExp(n.regex, "i");
			} catch {
				return null;
			}
		}).filter(r => r);

		let badTotalCount = 0;
		let badCurrentTypeCount = 0;
		let firstBadLineGlobal = null;
		let firstItemGlobal = null;
		let firstBadLineCurrentType = null;
		let firstItemCurrentType = null;

		for (const item of items) {
			if (!Array.isArray(item.textLines)) continue;
			const isCurrentType = item.type === currentType;

			for (const line of item.textLines) {
				const matched = regexList.some(r => r.test(line));
				if (!matched) {
					badTotalCount++;
					if (!firstBadLineGlobal) {
						firstBadLineGlobal = line;
						firstItemGlobal = item;
					}
					if (isCurrentType) {
						badCurrentTypeCount++;
						if (!firstBadLineCurrentType) {
							firstBadLineCurrentType = line;
							firstItemCurrentType = item;
						}
					}
				}
			}
		}

		return {
			badTotalCount,
			badCurrentTypeCount,
			firstBadLineGlobal,
			firstItemGlobal,
			firstBadLineCurrentType,
			firstItemCurrentType
		};
	}

	window.NeuronSummary = { getNeuronAnalysisSummary };
})();

2. ui/neuronSummaryView.js ‚Äî —Ç–æ–ª—å–∫–æ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞
// ui/neuronSummaryView.js
(function () {
	async function renderNeuronSummary() {
		const currentType = State.CurrentItem?.type;
		const summary = await NeuronSummary.getNeuronAnalysisSummary(currentType);

		const container = document.getElementById("tab-nav-neurons");
		container.innerText = `–ù–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫: ${summary.badCurrentTypeCount} (–≤ —Ç–µ–∫—É—â–µ–º —Ç–∏–ø–µ) / ${summary.badTotalCount} (–≤—Å–µ–≥–æ)`;

		// üëá –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ window –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
		window.__NeuronDebugInfo = summary;
	}

	window.renderNeuronSummary = renderNeuronSummary;
})();

üîÅ –ì–¥–µ –≤—ã–∑—ã–≤–∞—Ç—å?

–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤ render.js –∏–ª–∏ state.js –ø—Ä–æ—Å—Ç–æ –ø–∏—Å–∞—Ç—å:

renderNeuronSummary();


–•–æ—á–µ—à—å, —á—Ç–æ–±—ã —è –ø–æ–∫–∞–∑–∞–ª —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äî –∫–∞–∫ –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –ø–æ –∫–ª–∏–∫—É –∏ –ø–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—É—é –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É?